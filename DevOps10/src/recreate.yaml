# gateway
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
      - image: krzf/gateway-service:2
        name: gateway
        ports:
        - containerPort: 8087
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
---
# session
apiVersion: apps/v1
kind: Deployment
metadata:
  name: session
  labels:
    app: session
spec:
  replicas: 1
  selector:
    matchLabels:
      app: session
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: session
    spec:
      containers:
      - image: krzf/session-service:2
        name: session
        ports:
        - containerPort: 8081
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
---
# hotel
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hotel
  labels:
    app: hotel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotel
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: hotel
    spec:
      containers:
      - name: hotel
        image: krzf/hotel-service:2
        ports:
        - containerPort: 8082
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
---
# payment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment
  labels:
    app: payment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: payment
    spec:
      containers:
      - name: payment
        image: krzf/payment-service:2
        ports:
        - containerPort: 8084
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
---
# loyalty
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loyalty
  labels:
    app: loyalty
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loyalty
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: loyalty
    spec:
      containers:
      - name: loyalty
        image: krzf/loyalty-service:2
        ports:
        - containerPort: 8085
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
---
# report
apiVersion: apps/v1
kind: Deployment
metadata:
  name: report
  labels:
    app: report
spec:
  replicas: 1
  selector:
    matchLabels:
      app: report
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: report
    spec:
      containers:
      - name: report
        image: krzf/report-service:2
        ports:
        - containerPort: 8086
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
---
# booking
apiVersion: apps/v1
kind: Deployment
metadata:
  name: booking
  labels:
    app: booking
spec:
  replicas: 1
  selector:
    matchLabels:
      app: booking
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: booking
    spec:
      containers:
      - name: booking
        image: krzf/booking-service:2
        ports:
        - containerPort: 8083
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
---
# postgres
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15.1-alpine
        ports:
        - containerPort: 5432
        envFrom:
        - secretRef:
            name: app-secrets
        volumeMounts:
        - name: init-sql
          mountPath: /docker-entrypoint-initdb.d/init.sql
          subPath: init.sql
      volumes:
      - name: init-sql
        configMap:
          name: postgres-init-sql
---
# rabbitmq
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management-alpine
        ports:
        - containerPort: 5672