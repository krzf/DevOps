#delpoy
#gateway
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: gateway
  labels:
    app: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: gateway
    spec:
      containers:
      - image: krzf/gateway-service:2
        name: gateway
        ports:
        - containerPort: 8087
        env:
        - name: SESSION_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: SESSION_SERVICE_HOST
        - name: SESSION_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: SESSION_SERVICE_PORT
        - name: HOTEL_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: HOTEL_SERVICE_HOST
        - name: HOTEL_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: HOTEL_SERVICE_PORT
        - name: BOOKING_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: BOOKING_SERVICE_HOST
        - name: BOOKING_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: BOOKING_SERVICE_PORT
        - name: PAYMENT_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: PAYMENT_SERVICE_HOST
        - name: PAYMENT_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: PAYMENT_SERVICE_PORT
        - name: LOYALTY_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: LOYALTY_SERVICE_HOST
        - name: LOYALTY_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: LOYALTY_SERVICE_PORT
        - name: REPORT_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: REPORT_SERVICE_HOST
        - name: REPORT_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: REPORT_SERVICE_PORT
status: {}
---
#session
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: session
  labels:
    app: session
spec:
  replicas: 1
  selector:
    matchLabels:
      app: session
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: session
    spec:
      containers:
      - image: krzf/session-service:2
        name: session
        ports:
          - containerPort: 8081
        env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: "users_db"
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: POSTGRES_PORT
status: {}
---
##hotel
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: hotel
  labels:
    app: hotel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotel
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: hotel
    spec:
      containers:
      - name: hotel
        image: krzf/hotel-service:2
        ports:
        - containerPort: 8082
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            value: "hotels_db"
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: POSTGRES_HOST
          - name: POSTGRES_PORT
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: POSTGRES_PORT
status: {}
---
#payment
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: payment
  labels:
    app: payment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: payment
    spec:
      containers:
      - name: payment
        image: krzf/payment-service:2
        ports:
        - containerPort: 8084
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            value: "payments_db"
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: POSTGRES_HOST
          - name: POSTGRES_PORT
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: POSTGRES_PORT
status: {}
---
#loyalty
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: loyalty
  labels:
    app: loyalty
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loyalty
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: loyalty
    spec:
      containers:
      - name: loyalty
        image: krzf/loyalty-service:2
        ports:
        - containerPort: 8085
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            value: "balances_db"
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: POSTGRES_HOST
          - name: POSTGRES_PORT
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: POSTGRES_PORT
status: {}
---
#report
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: report
  labels:
    app: report
spec:
  replicas: 1
  selector:
    matchLabels:
      app: report
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: report
    spec:
      containers:
      - name: report
        image: krzf/report-service:2
        ports:
        - containerPort: 8086
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: POSTGRES_PASSWORD
          - name: RABBIT_MQ_USER
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: RABBIT_MQ_USER
          - name: RABBIT_MQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: RABBIT_MQ_PASSWORD
          - name: POSTGRES_DB
            value: "statistics_db"
          - name: RABBIT_MQ_QUEUE_NAME
            value: "messagequeue"
          - name: RABBIT_MQ_EXCHANGE
            value: "messagequeue-exchange"
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: POSTGRES_HOST
          - name: POSTGRES_PORT
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: POSTGRES_PORT
          - name: RABBIT_MQ_HOST
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: RABBIT_MQ_HOST
          - name: RABBIT_MQ_PORT
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: RABBIT_MQ_PORT
status: {}
---
#booking
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: booking
  labels:
    app: booking
spec:
  replicas: 1
  selector:
    matchLabels:
      app: booking
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: booking
    spec:
      containers:
      - name: booking
        image: krzf/booking-service:2
        ports:
        - containerPort: 8083
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: POSTGRES_PASSWORD
          - name: RABBIT_MQ_USER
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: RABBIT_MQ_USER
          - name: RABBIT_MQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: RABBIT_MQ_PASSWORD
          - name: POSTGRES_DB
            value: "reservations_db"
          - name: RABBIT_MQ_QUEUE_NAME
            value: "messagequeue"
          - name: RABBIT_MQ_EXCHANGE
            value: "messagequeue-exchange"
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: POSTGRES_HOST
          - name: POSTGRES_PORT
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: POSTGRES_PORT
          - name: RABBIT_MQ_HOST
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: RABBIT_MQ_HOST
          - name: RABBIT_MQ_PORT
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: RABBIT_MQ_PORT
          - name: HOTEL_SERVICE_HOST
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: HOTEL_SERVICE_HOST
          - name: HOTEL_SERVICE_PORT
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: HOTEL_SERVICE_PORT
          - name: PAYMENT_SERVICE_HOST
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: PAYMENT_SERVICE_HOST
          - name: PAYMENT_SERVICE_PORT
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: PAYMENT_SERVICE_PORT
          - name: LOYALTY_SERVICE_HOST
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: LOYALTY_SERVICE_HOST
          - name: LOYALTY_SERVICE_PORT
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: LOYALTY_SERVICE_PORT
status: {}
---
#postgres
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15.1-alpine
        ports:
        - containerPort: 5432
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: POSTGRES_PASSWORD
        volumeMounts:
        - name: init-sql
          mountPath: /docker-entrypoint-initdb.d/init.sql
          subPath: init.sql
      volumes:
      - name: init-sql
        configMap:
          name: postgres-init-sql
status: {}
---
#rabbit
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management-alpine
        ports:
        - containerPort: 5672
status: {}